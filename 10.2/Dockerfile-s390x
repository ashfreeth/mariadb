# vim:set ft=dockerfile:
FROM s390x/debian:jessie

# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added
RUN groupadd -r mysql && useradd -r -g mysql mysql

# add gosu for easy step-down from root
ENV GOSU_VERSION 1.10
RUN set -ex; \
	\
	fetchDeps=' \
		ca-certificates \
		wget \
	'; \
	apt-get update; \
	apt-get install -y --no-install-recommends $fetchDeps; \
	rm -rf /var/lib/apt/lists/*; \
	\
	dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
	wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
	wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
	\
# verify the signature
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
	gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
	rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc; \
	\
	chmod +x /usr/local/bin/gosu; \
# verify that the binary works
	gosu nobody true; \
	\
	apt-get purge -y --auto-remove $fetchDeps

RUN mkdir /docker-entrypoint-initdb.d

# install "pwgen" for randomizing passwords
# install "apt-transport-https" for Percona's repo (switched to https-only)
RUN apt-get update && apt-get install -y --no-install-recommends \
		apt-transport-https ca-certificates \
		pwgen \
	&& rm -rf /var/lib/apt/lists/*

ENV GPG_KEYS \
# Key fingerprint = 1993 69E5 404B D5FC 7D2F  E43B CBCB 082A 1BB9 43DB
# MariaDB Package Signing Key <package-signing-key@mariadb.org>
	199369E5404BD5FC7D2FE43BCBCB082A1BB943DB \
# pub   1024D/CD2EFD2A 2009-12-15
#       Key fingerprint = 430B DF5C 56E7 C94E 848E  E60C 1C4C BDCD CD2E FD2A
# uid                  Percona MySQL Development Team <mysql-dev@percona.com>
# sub   2048g/2D607DAF 2009-12-15
	430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A \
# pub   4096R/8507EFA5 2016-06-30
#       Key fingerprint = 4D1B B29D 63D9 8E42 2B21  13B1 9334 A25F 8507 EFA5
# uid                  Percona MySQL Development Team (Packaging key) <mysql-dev@percona.com>
# sub   4096R/4CAC6D72 2016-06-30
	4D1BB29D63D98E422B2113B19334A25F8507EFA5
RUN set -ex; \
	export GNUPGHOME="$(mktemp -d)"; \
	for key in $GPG_KEYS; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
	done; \
	gpg --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; \
	rm -r "$GNUPGHOME"; \
	apt-key list

# COMMENTED OUT add Percona's repo for xtrabackup (which is useful for Galera)
#RUN echo "deb https://repo.percona.com/apt jessie main" > /etc/apt/sources.list.d/percona.list \
#	&& { \
#		echo 'Package: *'; \
#		echo 'Pin: release o=Percona Development Team'; \
#		echo 'Pin-Priority: 998'; \
#	} > /etc/apt/preferences.d/percona

# Install dependencies for building MariaDB from source
RUN apt-get update && apt-get install -y \
		build-essential hostname libncurses-dev git wget cmake gcc make tar \
		libpcre3-dev bison scons libboost-dev libboost-program-options-dev openssl \
		dh-autoreconf libssl-dev

ENV MARIADB_MAJOR 10.2
ENV MARIADB_VERSION 10.2.14+maria~jessie
ENV SOURCE_DIR=/tmp/source

# Install MariaDB from source
RUN cd $SOURCE_DIR && wget https://github.com/MariaDB/server/archive/mariadb-10.2.14.tar.gz \
	&& tar xzf mariadb-10.2.14.tar.gz \
	&& cd server-mariadb-10.2.14 \

## Make changes to file to fix openssl related issue
RUN cd $SOURCE_DIR/server-mariadb-10.2.14 \
	&& sed -i '231d' libmariadb/include/mariadb_com.h \
	&& sed -i '231 a\#define SERVER_STATUS_IN_TRANS_READONLY       8192' libmariadb/include/mariadb_com.h \
	&& sed -i '231 a\#define SERVER_SESSION_STATE_CHANGED      16384' libmariadb/include/mariadb_com.h \
	&& sed -i '231 a\#define SERVER_STATUS_ANSI_QUOTES        32768' libmariadb/include/mariadb_com.h \

 ##Build, configure, install
RUN BUILD/autorun.sh \
  && ./configure --WITH_SAFEMALLOC=ON --with-debug \
  && make \
  && make install \
  && groupadd -r mysql && useradd -r -g mysql mysql \
  && cd /usr/local/mysql \
  && chmod -R o+rwx . \
  && scripts/mysql_install_db \
  && sleep 20s \
  && chmod -R o+rwx . \
  && cp support-files/mysql.server /etc/init.d/mysql \

# COMMENTED OUT
#RUN echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie main" > /etc/apt/sources.list.d/mariadb.list \
#	&& { \
#		echo 'Package: *'; \
#		echo 'Pin: release o=MariaDB'; \
#		echo 'Pin-Priority: 999'; \
#	} > /etc/apt/preferences.d/mariadb
# add repository pinning to make sure dependencies from this MariaDB repo are preferred over Debian dependencies
#  libmariadbclient18 : Depends: libmysqlclient18 (= 5.5.42+maria-1~wheezy) but 5.5.43-0+deb7u1 is to be installed

# the "/var/lib/mysql" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already "configured" (ie, stuff in /var/lib/mysql/mysql)
# also, we set debconf keys to make APT a little quieter
RUN { \
		echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'; \
		echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'; \
	} | debconf-set-selections \
	&& apt-get update \
	&& apt-get install -y \
#		"mariadb-server=$MARIADB_VERSION" \
# COMMENTED OUT percona-xtrabackup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos
#		percona-xtrabackup-24 \
		socat \
	&& rm -rf /var/lib/apt/lists/* \
# comment out any "user" entires in the MySQL config ("docker-entrypoint.sh" or "--user" will handle user switching)
	&& sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \
# purge and re-create /var/lib/mysql with appropriate ownership
	&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \
	&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \
# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime
	&& chmod 777 /var/run/mysqld \
# comment out a few problematic configuration values
	&& find /etc/mysql/ -name '*.cnf' -print0 \
		| xargs -0 grep -lZE '^(bind-address|log)' \
		| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \
# don't reverse lookup hostnames, they are usually another container
	&& echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

# Cleanup
RUN apt-get remove -y \
	    bison \
	    cmake \
	    dh-autoreconf \
	    git \
	    make \
	    pkg-config \
	    wget \
	&& apt autoremove -y \
	&& apt-get clean && rm -rf /var/lib/apt/lists/* \
	&& rm -rf $SOURCE_DIR/server-mariadb-10.2.14 $SOURCE_DIR/mariadb-10.2.14.tar.gz $SOURCE_DIR/mariadb-connector-c \

VOLUME /var/lib/mysql

COPY docker-entrypoint.sh /usr/local/bin/
RUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat
ENTRYPOINT ["docker-entrypoint.sh"]

EXPOSE 3306
CMD ["mysqld"]
